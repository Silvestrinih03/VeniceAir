-- SEQUENCE ID ASSENTOS
CREATE SEQUENCE SEQ_ASSENTOS START WITH 1 INCREMENT BY 1;

-- TRIGGER ASSENTOS
CREATE TRIGGER PREENCHER_ID_ASSENTOS
BEFORE INSERT ON ASSENTOS
FOR EACH ROW
BEGIN
    :NEW.ID_ASSENTO := SEQ_ASSENTOS.nextval;
END;

-- TABLE ASSENTOS
CREATE TABLE ASSENTOS(
    ID_ASSENTO INTEGER PRIMARY KEY,
    NUM_ASSENTO VARCHAR2(4),
    STATUS INTEGER,
    AERONAVE INTEGER NOT NULL,
    FOREIGN KEY (AERONAVE) REFERENCES AERONAVES(ID_AERONAVE)
);

-- SEQUENCE NUMERO_ASSENTO
CREATE SEQUENCE SEQ_NUM_ASSENTO MINVALUE 1 MAXVALUE 100 INCREMENT BY 1;

-- TRIGGER NUM_ASSENTO
CREATE OR REPLACE TRIGGER TRIGGER_NUM_ASSENTO
BEFORE INSERT ON ASSENTOS
FOR EACH ROW
DECLARE
    v_letra VARCHAR2(1);
BEGIN
    -- Obtém o próximo valor da sequência para a coluna ID_ASSENTO
    SELECT SEQ_NUM_ASSENTO.NEXTVAL INTO :NEW.ID_ASSENTO FROM DUAL;

    -- Gera a letra com base na divisão do valor por 50
    v_letra := CHR(ASCII('A') + ((:NEW.ID_ASSENTO - 1) / 50));

    -- Gera o valor para a coluna NUM_ASSENTO
    :NEW.NUM_ASSENTO := v_letra || MOD(:NEW.ID_ASSENTO - 1, 50) + 1;

    -- Atribui o valor gerado à coluna STATUS
    :NEW.STATUS := 0;

    -- Atribui o valor da aeronave (1 no exemplo)
    :NEW.AERONAVE := 1;
END;

-- INSERT
INSERT INTO ASSENTOS(STATUS, AERONAVE) VALUES (0, 1);